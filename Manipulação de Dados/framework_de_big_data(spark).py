# -*- coding: utf-8 -*-
"""Framework de Big Data(Spark)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H5yW_ZfIy2i856ZWHgljJfNKKOwHDOJz

## PySpark - Instalando a biblioteca no google colab
"""

!pip install pyspark

!pip install findspark

import findspark
findspark.init()
from pyspark.sql import SparkSession
spark = SparkSession.builder.master("local[*]").getOrCreate()

df=spark.sql('''select 'Sucesso total, estamos online!' as hello''')
df.show()

#importando as bibliotecas do spark
from pyspark.sql import Row, DataFrame
from pyspark.sql.types import StringType, StructType, StructField, IntegerType
from pyspark.sql.functions import col, expr, lit, substring, concat, concat_ws, when, coalesce
from pyspark.sql import functions as F #for more SQL functions
from functools import reduce

"""##1. Data Manipulations using Spark"""

df=spark.read.csv("/content/banklist.csv", sep=",", inferSchema=True, header=True)

print("df.count: ", df.count())
print("df.col ct: ", len(df.columns))
print("df.columns: ", df.columns)

"""##2. Using SQL in PySpark"""

df.createOrReplaceTempView("banklist")
df_check=spark.sql('''select `Bank Name`, city, `Closing Date` from banklist''')
df_check.show()

df.createOrReplaceTempView("banklist")
df_check=spark.sql('''select `Bank Name`, city, `Closing Date` from banklist''')
df_check.show(4, truncate=False)

"""##3. DataFrame Basic Operations"""

df.describe().show()

df.describe("City", "ST").show()

"""Count, Columns and Schema"""

print("total de Linhas: ", df.count())
print("total de Colunas: ", len(df.columns))
print("Colunas: ", df.columns)
print("Tipo do Dado: ", df.dtypes)
print("Schema: ", df.schema)

df.printSchema()

"""##Remove Duplicates"""

df=df.dropDuplicates()
print("df.count: ", df.count())
print("df.columns: ", df.columns)

"""##Select Specific Columns"""

df2=df.select(*["Bank Name", "City"])
df2.show()

"""##Select Multiple Columns"""

col_l=list(set(df.columns) - {"CERT", "ST"})
df2 = df.select(*col_l)
df2.show()

"""##Rename Column"""

df2 = df \
  .withColumnRenamed("Bank Name", "bank_name") \
  .withColumnRenamed("Acquiring Institution", "acq_institution") \
  .withColumnRenamed("Closing Date", "closing_date") \
  .withColumnRenamed("ST", "state") \
  .withColumnRenamed("CERT", "cert")

df2.show()

